import { useParams, useNavigate, Link } from "react-router-dom";
import { StandingsTable } from "../components/StandingsTable";
import { useTournament } from "../hooks/useTournament";
import { Tournament } from "../tournament";
import React from "react";

interface SavedTournament extends Tournament {
  finishedAt: Date;
}

export const ResultsPage = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const { currentTournament, tournamentHistory } = useTournament();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞ —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏
  const tournament = id 
    ? tournamentHistory.tournaments.find(t => t.id === id) 
    : currentTournament;

  if (!tournament) {
    return (
      <div className="container">
        <div className="tournament-status">
          <h3>–¢—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h3>
          <p>–í–æ–∑–º–æ–∂–Ω–æ, —Ç—É—Ä–Ω–∏—Ä –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω</p>
          <button 
            onClick={() => navigate('/')} 
            className="btn-primary"
            style={{ marginTop: '1rem' }}
          >
            –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç—É—Ä–Ω–∏—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º (–∏–º–µ–µ—Ç finishedAt)
  const isSavedTournament = (t: Tournament | SavedTournament): t is SavedTournament => {
    return 'finishedAt' in t;
  };

  return (
    <div className="container">
      <h1>
        <span className="emoji">üèÜ</span> –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç—É—Ä–Ω–∏—Ä–∞: {tournament.name}
      </h1>
      
      <div className="tournament-meta">
        <span>üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {new Date(tournament.createdAt).toLocaleDateString()}</span>
        {isSavedTournament(tournament) && (
          <span>üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω: {new Date(tournament.finishedAt).toLocaleDateString()}</span>
        )}
        <span>üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {tournament.players.length}</span>
        <span>üåÄ –°—ã–≥—Ä–∞–Ω–æ: {tournament.currentRound} –∏–∑ {tournament.totalRounds} —Ç—É—Ä–æ–≤</span>
      </div>
      
      <StandingsTable players={tournament.players} />
      
      <div className="actions">
        <Link to="/history" className="btn-secondary">
          üìú –ö –∏—Å—Ç–æ—Ä–∏–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤
        </Link>
        <Link to="/" className="btn-primary">
          üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é
        </Link>
      </div>
    </div>
  );
};